BEGIN;
BEGIN
EXPLAIN
select
	c_custkey,
	c_name,
	sum(l_extendedprice * (1 - l_discount)) as revenue,
	c_acctbal,
	n_name,
	c_address,
	c_phone,
	c_comment
from
	customer,
	orders,
	lineitem,
	nation
where
	c_custkey = o_custkey
	and l_orderkey = o_orderkey
	and o_orderdate >= date '1993-02-01'
	and o_orderdate < cast(date '1993-02-01' + interval '3 month' as date)
	and l_returnflag = 'R'
	and c_nationkey = n_nationkey
group by
	c_custkey,
	c_name,
	c_acctbal,
	c_phone,
	n_name,
	c_address,
	c_comment
order by
	revenue desc
LIMIT 20;
                                                                              QUERY PLAN                                                                               
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=1713662.14..1713662.19 rows=20 width=175)
   ->  Sort  (cost=1713662.14..1714934.83 rows=509078 width=175)
         Sort Key: (sum((sum((lineitem.l_extendedprice * ('1'::double precision - lineitem.l_discount)))))) DESC
         ->  HashAggregate  (cost=1695024.97..1700115.75 rows=509078 width=175)
               Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
               ->  Remote Subquery Scan on all (datanode_1_1,datanode_2_1)  (cost=353516.75..1682298.02 rows=509078 width=175)
                     ->  HashAggregate  (cost=353516.75..1682298.02 rows=509078 width=175)
                           Group Key: customer.c_custkey, customer.c_name, customer.c_acctbal, customer.c_phone, nation.n_name, customer.c_address, customer.c_comment
                           ->  Hash Join  (cost=353516.75..1682298.02 rows=509078 width=175)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Hash Join  (cost=353515.19..1675296.64 rows=509078 width=153)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Hash Join  (cost=284487.43..1599066.40 rows=563123 width=12)
                                             Hash Cond: (lineitem.l_orderkey = orders.o_orderkey)
                                             ->  Bitmap Heap Scan on lineitem  (cost=3750.76..1256499.09 rows=14986507 width=12)
                                                   Recheck Cond: (l_returnflag = 'R'::bpchar)
                                                   ->  Bitmap Index Scan on lineitem_l_orderkey_idx_l_returnflag  (cost=0.00..4.13 rows=14986507 width=0)
                                             ->  Hash  (cost=273691.15..273691.15 rows=563642 width=8)
                                                   ->  Bitmap Heap Scan on orders  (cost=11961.52..273691.15 rows=563642 width=8)
                                                         Recheck Cond: ((o_orderdate >= '1993-02-01'::date) AND (o_orderdate < '1993-05-01'::date))
                                                         ->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_idx  (cost=0.00..11820.60 rows=563642 width=0)
                                                               Index Cond: ((o_orderdate >= '1993-02-01'::date) AND (o_orderdate < '1993-05-01'::date))
                                       ->  Hash  (cost=50278.45..50278.45 rows=1499945 width=145)
                                             ->  Seq Scan on customer  (cost=0.00..50278.45 rows=1499945 width=145)
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=30)
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=30)
(26 rows)

COMMIT;
COMMIT
