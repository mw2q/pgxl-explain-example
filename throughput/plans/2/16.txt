BEGIN;
BEGIN
EXPLAIN
select
	p_brand,
	p_type,
	p_size,
	count(distinct ps_suppkey) as supplier_cnt
from
	partsupp,
	part
where
	p_partkey = ps_partkey
	and p_brand <> 'Brand#21'
	and p_type not like 'STANDARD POLISHED%'
	and p_size in (45, 50, 29, 20, 44, 19, 32, 22)
	and ps_suppkey not in (
		select
			s_suppkey
		from
			supplier
		where
			s_comment like '%Customer%Complaints%'
	)
group by
	p_brand,
	p_type,
	p_size
order by
	supplier_cnt desc,
	p_brand,
	p_type,
	p_size;
                                                                QUERY PLAN                                                                
------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=358145.72..358215.27 rows=27821 width=40)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   ->  GroupAggregate  (cost=57980.79..356091.99 rows=27821 width=40)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Remote Subquery Scan on all (datanode_1_1,datanode_2_1)  (cost=57980.79..349878.51 rows=593527 width=40)
               ->  Sort  (cost=406794.64..408278.46 rows=593527 width=40)
                     Sort Key: part.p_brand, part.p_type, part.p_size
                     ->  Hash Join  (cost=57980.79..349878.51 rows=593527 width=40)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Seq Scan on partsupp  (cost=32.37..270994.37 rows=4000120 width=8)
                                 Filter: (NOT (hashed SubPlan 1))
                                 SubPlan 1
                                   ->  Remote Subquery Scan on all (datanode_2_1)  (cost=0.12..32.35 rows=10 width=4)
                                         ->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.12..32.35 rows=10 width=4)
                           ->  Hash  (cost=54238.98..54238.98 rows=296755 width=40)
                                 ->  Bitmap Heap Scan on part  (cost=5730.63..54238.98 rows=296755 width=40)
                                       Recheck Cond: (p_size = ANY ('{45,50,29,20,44,19,32,22}'::integer[]))
                                       Filter: ((p_brand <> 'Brand#21'::bpchar) AND ((p_type)::text !~~ 'STANDARD POLISHED%'::text))
                                       ->  Bitmap Index Scan on part_p_size_idx  (cost=0.00..5656.44 rows=319334 width=0)
                                             Index Cond: (p_size = ANY ('{45,50,29,20,44,19,32,22}'::integer[]))
(20 rows)

COMMIT;
COMMIT
